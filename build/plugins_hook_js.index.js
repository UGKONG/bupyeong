"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkbu"] = self["webpackChunkbu"] || []).push([["plugins_hook_js"],{

/***/ "./plugins/hook.js":
/*!*************************!*\
  !*** ./plugins/hook.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useEl\": () => (/* binding */ useEl),\n/* harmony export */   \"useEls\": () => (/* binding */ useEls),\n/* harmony export */   \"useFetch\": () => (/* binding */ useFetch),\n/* harmony export */   \"useRest\": () => (/* binding */ useRest),\n/* harmony export */   \"useFadeIn\": () => (/* binding */ useFadeIn),\n/* harmony export */   \"useFadeOut\": () => (/* binding */ useFadeOut),\n/* harmony export */   \"useHyphen\": () => (/* binding */ useHyphen),\n/* harmony export */   \"useDateFormat\": () => (/* binding */ useDateFormat),\n/* harmony export */   \"useTimeFormat\": () => (/* binding */ useTimeFormat),\n/* harmony export */   \"useNumberFormat\": () => (/* binding */ useNumberFormat),\n/* harmony export */   \"useAge\": () => (/* binding */ useAge),\n/* harmony export */   \"useImgFileView\": () => (/* binding */ useImgFileView),\n/* harmony export */   \"usePwEncoding\": () => (/* binding */ usePwEncoding),\n/* harmony export */   \"usePwDecoding\": () => (/* binding */ usePwDecoding),\n/* harmony export */   \"useMonthSpan\": () => (/* binding */ useMonthSpan),\n/* harmony export */   \"useElement\": () => (/* binding */ useElement),\n/* harmony export */   \"useQueryString\": () => (/* binding */ useQueryString),\n/* harmony export */   \"useQueryObject\": () => (/* binding */ useQueryObject),\n/* harmony export */   \"useToday\": () => (/* binding */ useToday),\n/* harmony export */   \"useMaxArr\": () => (/* binding */ useMaxArr),\n/* harmony export */   \"useMinxArr\": () => (/* binding */ useMinxArr),\n/* harmony export */   \"useOrderArr\": () => (/* binding */ useOrderArr),\n/* harmony export */   \"useFileSize\": () => (/* binding */ useFileSize),\n/* harmony export */   \"useDateValidation\": () => (/* binding */ useDateValidation),\n/* harmony export */   \"useSendValidation\": () => (/* binding */ useSendValidation),\n/* harmony export */   \"useOffsetY\": () => (/* binding */ useOffsetY),\n/* harmony export */   \"useSearchText\": () => (/* binding */ useSearchText),\n/* harmony export */   \"useAlert\": () => (/* binding */ useAlert),\n/* harmony export */   \"useSession\": () => (/* binding */ useSession),\n/* harmony export */   \"useRemoveSession\": () => (/* binding */ useRemoveSession),\n/* harmony export */   \"useLocal\": () => (/* binding */ useLocal),\n/* harmony export */   \"useRemoveLocal\": () => (/* binding */ useRemoveLocal),\n/* harmony export */   \"useDownload\": () => (/* binding */ useDownload),\n/* harmony export */   \"useDelay\": () => (/* binding */ useDelay),\n/* harmony export */   \"useForm\": () => (/* binding */ useForm)\n/* harmony export */ });\n/* eslint-disable default-case */\nNodeList.prototype.all = function (fn) {\n  this.forEach((el, idx) => fn(el, idx));\n};\n\nconst useEl = (el = null) => document.querySelector(el);\nconst useEls = (el = null) => document.querySelectorAll(el);\nconst useFetch = (_url = '/', task = '', _params = {}, _success = null, _error = null, options = false) => {\n  let params = { ..._params\n  };\n  let formData = new FormData();\n  let keys = Object.keys(params);\n  keys.forEach(key => {\n    if (options) {\n      if (Array.isArray(params[key])) {\n        params[key].forEach(data => formData.append(key, data));\n      } else {\n        formData.append(key, params[key]);\n      }\n    } else {\n      formData.append(key, JSON.stringify(params[key]));\n    }\n  });\n  formData.append('TASK', task);\n  fetch(_url, {\n    method: 'POST',\n    body: formData\n  }).then(res => {\n    if (!res.ok) {\n      if (!_error) return console.warn('Response Error!');\n      console.log('res', res);\n\n      _error();\n    }\n\n    return res.json();\n  }).then(resData => {\n    if (!_success) {\n      console.info('Success! But success function is null!');\n      console.log(resData);\n    } else {\n      _success(resData);\n    }\n  }).catch(err => {\n    if (!_error) return console.warn('Request Error!');\n    console.error('err', err);\n\n    _error(err);\n  });\n}; // REST API request = {url: String, method: String, data: Object, start: Function, success: Function, error: Function}\n\nconst useRest = request => {\n  if (typeof request == 'string') {\n    return console.warn('The useRest parameter is an Object!');\n  }\n\n  let url = request.url ?? null;\n  let method = request.method ?? 'GET';\n  let data = request.data ?? null;\n\n  let start = request.start ?? function () {};\n\n  let success = request.success ?? function () {};\n\n  let error = request.error ?? function () {};\n\n  if (!url) console.warn('useRest: {url}이 없습니다.');\n  start(data);\n\n  switch (method) {\n    case 'GET':\n      fetch(url).then(res => {\n        if (!res.ok) {\n          error();\n          return console.warn('Request Error!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        success(resData);\n      }).catch(resData => {\n        error(resData);\n      });\n      break;\n\n    case 'POST':\n      fetch(url, {\n        method: method,\n        body: new URLSearchParams(data)\n      }).then(res => {\n        if (!res.ok) {\n          error();\n          return console.warn('Request Error!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        success(resData);\n      }).catch(resData => {\n        error(resData);\n      });\n      break;\n\n    case 'PUT':\n      fetch(url, {\n        method: method,\n        body: new URLSearchParams(data)\n      }).then(res => {\n        if (!res.ok) {\n          error();\n          return console.warn('Request Error!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        success(resData);\n      }).catch(resData => {\n        error(resData);\n      });\n      break;\n\n    case 'DELETE':\n      fetch(url, {\n        method: method,\n        body: new URLSearchParams(data)\n      }).then(res => {\n        if (!res.ok) {\n          error();\n          return console.warn('Request Error!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        success(resData);\n      }).catch(resData => {\n        error(resData);\n      });\n      break;\n  }\n}; // FadeIn 함수 (element:String, duration:Number) : None\n\nconst useFadeIn = (element = null, duration = 500) => {\n  if (!element) {\n    console.warn('Element is null!!');\n    return;\n  }\n\n  let el = document.querySelector(element);\n  el.style.transition = `${duration / 1000}s`;\n  el.style.opacity = 0;\n  el.style.display = 'block';\n  setTimeout(() => el.style.opacity = 1, 0);\n}; // FadeOut 함수 (element:String, duration:Number) : None\n\nconst useFadeOut = (element = null, duration = 500) => {\n  if (!element) {\n    console.warn('element is null!!');\n    return;\n  }\n\n  let el = document.querySelector(element);\n  el.style.transition = `${duration / 1000}s`;\n  el.style.opacity = 0;\n  setTimeout(() => el.style.display = 'none', duration);\n}; // 연락처 하이픈 추가 함수 (element:Object, to:Object, option:Boolean) : None\n\nconst useHyphen = (element, to = null, option = false) => {\n  if (to) {\n    if (option) {\n      element.value = element.value.replace(/[^0-9]/g, \"\").replace(/(^02|^0505|^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/, \"$1-$2-$3\").replace(\"--\", \"-\");\n    }\n\n    document.querySelector(to).innerText = element.value.replace(/[^0-9]/g, \"\").replace(/(^02|^0505|^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/, \"$1-$2-$3\").replace(\"--\", \"-\");\n  } else {\n    element.value = element.value.replace(/[^0-9]/g, \"\").replace(/(^02|^0505|^1[0-9]{3}|^0[0-9]{2})([0-9]+)?([0-9]{4})$/, \"$1-$2-$3\").replace(\"--\", \"-\");\n  }\n}; // 날짜 포맷 함수 (dt:Object, format:String) : String\n\nconst useDateFormat = (dt = new Date(), format = '-') => {\n  let date = new Date(dt);\n\n  let _year = date.getFullYear();\n\n  let _month = Number(date.getMonth() + 1) < 10 ? '0' + Number(date.getMonth() + 1) : Number(date.getMonth()) + 1;\n\n  let _date = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n\n  return _year + format + _month + format + _date;\n}; // 시간 포맷 함수 (dt:Object, format:String) : String\n\nconst useTimeFormat = (dt = new Date(), format = ':') => {\n  let date = new Date(dt);\n\n  let _hours = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\n\n  let _minutes = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n\n  let _seconds = date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds();\n\n  return _hours + format + _minutes + format + _seconds;\n}; // 숫자 포맷 함수 (value:Number|String) : String\n\nconst useNumberFormat = (value = null) => {\n  return String(value).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}; // 나이계산 함수 (y:String|Number) : Number\n\nconst useAge = (y = null) => {\n  if (!y) {\n    return 0;\n  }\n\n  let nowYear = new Date().getFullYear();\n\n  let _nowYear = String(nowYear).slice(2, 4);\n\n  let date;\n  let birth = String(y);\n\n  if (birth.indexOf('-') > -1) {\n    date = new Date(y);\n  } else {\n    if (birth.length == 8) {\n      date = new Date(birth.slice(0, 4) + '-' + birth.slice(4, 6) + '-' + birth.slice(6, 8));\n    } else if (birth.length == 6) {\n      let _y = birth.slice(0, 2) <= _nowYear ? '20' : '19';\n\n      date = new Date(_y + birth.slice(0, 2) + '-' + birth.slice(2, 4) + '-' + birth.slice(4, 6));\n    }\n  }\n\n  let result = Number(nowYear) - Number(date.getFullYear()) + 1;\n  return result;\n}; // 첨부 이미지 미리보기 (input:Object, output:Object, defaultImageURL:String) : None\n\nconst useImgFileView = (input, output, defaultImageURL = '') => {\n  let _input = document.querySelector(input);\n\n  if (_input.files && _input.files[0]) {\n    let reader = new FileReader();\n\n    reader.onload = e => {\n      document.querySelector(output).setAttribute('src', e.target.result);\n    };\n\n    reader.readAsDataURL(_input.files[0]);\n  } else {\n    document.querySelector(output).setAttribute('src', defaultImageURL);\n  }\n}; // 암호화 하는 함수 (str:String|Number) : String\n\nconst usePwEncoding = (str = '') => {\n  var result = btoa(unescape(encodeURIComponent(str)));\n  return result;\n}; // 복호화 하는 함수 (str:String|Number) : String\n\nconst usePwDecoding = (str = '') => {\n  var result = decodeURIComponent(escape(atob(str)));\n  return result;\n}; // 해당 월 첫날 끝날 오늘 첫날 요일 (dt: Object) : String[]\n\nconst useMonthSpan = (dt = new Date()) => {\n  let TODAY = useDateFormat(dt);\n  let date = new Date(dt);\n  date.setDate(1);\n  let START_DAY = date.getDay();\n  let START_DT = useDateFormat(date);\n  date.setMonth(date.getMonth() + 1);\n  date.setDate(1);\n  date.setDate(date.getDate() - 1);\n  let END_DT = useDateFormat(date);\n  return [START_DT, END_DT, TODAY, START_DAY];\n}; // 프레임워크 사용X 컴포넌트 제작 함수 (tag:String, attr:Object, template:String, target:Element)\n\nconst useElement = (tag = 'div', attr = null, template = '', target = null) => {\n  let _tag = document.createElement(tag);\n\n  if (attr) {\n    let keys = Object.keys(attr);\n    keys.forEach(key => _tag.setAttribute(key, attr[key]));\n  }\n\n  _tag.innerHTML = template;\n\n  if (target) {\n    target.appendChild(_tag);\n  } else {\n    return _tag;\n  }\n}; // GET파라미터 스트링변환\n\nconst useQueryString = (dataObject = {}) => {\n  let resultStr = '';\n  let keys = Object.keys(dataObject);\n  keys.forEach((key, idx) => {\n    resultStr += idx == 0 ? '?' : '';\n    resultStr += key + '=' + dataObject[key];\n    resultStr += keys.length - 1 == idx ? '' : '&';\n  });\n  return resultStr;\n}; // GET파라미터 객체변환\n\nconst useQueryObject = (dataString = '') => {\n  // db_table=dt_Introduce&htmlSeq=15\n  let resultObj = {};\n  let dataStringArr = [];\n\n  if (String(dataString).indexOf('&') > -1) {\n    dataStringArr = String(dataString).split('&');\n  } else {\n    dataStringArr[0] = dataString;\n  }\n\n  dataStringArr.forEach(data => {\n    let [key, value] = String(data).split('=');\n    resultObj[key] = value;\n  });\n  return resultObj;\n}; // Today: String 반환\n\nconst useToday = (day = new Date()) => {\n  let y = day.getFullYear();\n  let m = day.getMonth() + 1 < 10 ? '0' + (day.getMonth() + 1) : day.getMonth() + 1;\n  let d = day.getDate() < 10 ? '0' + day.getDate() : day.getDate();\n\n  let _h = day.getHours() < 10 ? '0' + day.getHours() : day.getHours();\n\n  let _m = day.getMinutes() < 10 ? '0' + day.getMinutes() : day.getMinutes();\n\n  let _s = day.getSeconds() < 10 ? '0' + day.getSeconds() : day.getSeconds();\n\n  return `${y}-${m}-${d} ${_h}:${_m}:${_s}`;\n}; // 배열의 프로퍼티 value중 가장 높은 Object 반환\n\nconst useMaxArr = (arr = [], prop = '') => {\n  let temp = arr.sort((a, b) => Number(a[prop]) - Number(b[prop]));\n  if (temp.length == 0) return 0;\n  let maxObj = temp[temp.length - 1];\n  return maxObj;\n}; // 배열의 프로퍼티 value중 가장 낮은 Object 반환\n\nconst useMinxArr = (arr = [], prop = '') => {\n  let temp = arr.sort((a, b) => Number(a[prop]) - Number(b[prop]));\n  if (temp.length == 0) return 0;\n  let minObj = temp[0];\n  return minObj;\n}; // 배열의 프로퍼티 value 정렬 후 리스트 반환 (arr: 배열, prop: KeyName, sort: 오름/내림차순, type: number/string)\n\nconst useOrderArr = (arr = [], prop = null, sort = 'up', type = 'number') => {\n  let tempArr = [...arr];\n\n  if (!prop) {\n    switch (type) {\n      case 'number':\n        return sort == 'up' ? tempArr.sort((a, b) => Number(a) - Number(b)) : tempArr.sort((a, b) => Number(b) - Number(a));\n\n      case 'string':\n        return sort == 'up' ? tempArr.sort((a, b) => a < b ? -1 : a > b ? 1 : 0) : tempArr.sort((a, b) => a > b ? -1 : a < b ? 1 : 0);\n    }\n  } else {\n    switch (type) {\n      case 'number':\n        return sort == 'up' ? tempArr.sort((a, b) => Number(a[prop]) - Number(b[prop])) : tempArr.sort((a, b) => Number(b[prop]) - Number(a[prop]));\n\n      case 'string':\n        return sort == 'up' ? tempArr.sort((a, b) => a[prop] < b[prop] ? -1 : a[prop] > b[prop] ? 1 : 0) : tempArr.sort((a, b) => a[prop] > b[prop] ? -1 : a[prop] < b[prop] ? 1 : 0);\n    }\n  }\n}; // 파일 사이즈 반환\n\nconst useFileSize = size => {\n  let result = 0;\n  let ext = '';\n  let n = 1024;\n\n  if (Number(size) >= n) {\n    result = Number(size) / n;\n    ext = 'KB';\n  }\n\n  if (Number(size) >= n * n) {\n    result = Number(size) / n / n;\n    ext = 'MB';\n  }\n\n  if (Number(size) >= n * n * n) {\n    result = Number(size) / n / n / n;\n    ext = 'GB';\n  }\n\n  if (Number(size) >= n * n * n * n) {\n    result = Number(size) / n / n / n / n;\n    ext = 'TB';\n  }\n\n  return Number(result).toFixed(2) + ext;\n}; // 날짜 Validation (a: Element, b: Element)\n\nconst useDateValidation = (startEl = null, endEl = null, callbackFn = () => {}) => {\n  if (!startEl || !endEl) return console.warn('Start Date or End Date is Null!');\n  if (startEl.value == '' || endEl.value == '') return null;\n  let start;\n  let end;\n\n  if (typeof startEl == 'object') {\n    start = startEl.value;\n  }\n\n  if (typeof endEl == 'object') {\n    end = endEl.value;\n  }\n\n  start = new Date(start);\n  end = new Date(end);\n  start.setHours(0);\n  end.setHours(0);\n  start.setMinutes(0);\n  end.setMinutes(0);\n  start.setSeconds(0);\n  end.setSeconds(0);\n  start.setMilliseconds(0);\n  end.setMilliseconds(0);\n  let result = end - start < 0 ? false : true;\n\n  if (!result) {\n    callbackFn(result);\n  }\n\n  return result;\n}; // 게시글 등록/수정 Validation (el: Element, callbackFn: Function)\n\nconst useSendValidation = (el = null, errFn = () => {}, param1 = null, param2 = null, param3 = null) => {\n  if (!el) return console.error('\"el\" is null!');\n\n  if (Array.isArray(el)) {\n    for (let i of el) {\n      let val = typeof i != 'object' ? i : i.value;\n\n      if (val == '') {\n        if (typeof i == 'object') i.focus();\n        errFn(i, param1, param2, param3);\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  let val = typeof el != 'object' ? el : el.value;\n  if (val != '') return true;\n  if (typeof el != 'object') return false;\n  errFn(el, param1, param2, param3);\n  return false;\n}; // Element 위치 구하기\n\nconst useOffsetY = (el = {}) => {\n  if (!el.tagName) return console.warn('el is undefined!');\n  return el.getBoundingClientRect().top;\n}; // 검색어 변환\n\nconst useSearchText = (value = '') => {\n  return value.replaceAll(' ', '').toLowerCase();\n}; // 알림창 띄우기\n\nconst useAlert = {\n  title: 'Example Title',\n  text: 'Example Description',\n  skin: {\n    info: {\n      icon: 'fas fa-info-circle',\n      txt: '#f8f9fb',\n      bg: '#0c86eb',\n      progress: 'rgb(12,117,204)'\n    },\n    success: {\n      icon: 'fas fa-check-circle',\n      txt: '#f8f9fb',\n      bg: '#54ac3b',\n      progress: 'rgb(65 158 38)'\n    },\n    warn: {\n      icon: 'fas fa-exclamation-triangle',\n      txt: '#353a40',\n      bg: '#feb100',\n      progress: 'rgb(196 140 11)'\n    },\n    error: {\n      icon: 'fas fa-times',\n      txt: '#f8f9fb',\n      bg: '#ff395a',\n      progress: 'rgb(214 41 70)'\n    },\n    other: {\n      icon: 'fas fa-question',\n      txt: '#f8f9fb',\n      bg: '#464646',\n      progress: 'rgb(61 52 52)'\n    }\n  },\n\n  style(isMobile) {\n    return `\n      <style>\n        section[alert] {\n          user-select: none;\n          position: fixed;\n          top: -100px;\n          right: ${isMobile ? '50%' : '10px'};\n          width: ${isMobile ? 'calc(100% - 40px)' : '400px'};\n          transform: ${isMobile ? 'translateX(50%)' : 'unset'};\n          height: ${isMobile ? '50px' : '70px'};\n          background-color: #fff;\n          border-radius: 4px;\n          box-shadow: 0px 2px 6px #00000050;\n          z-index: 99999999999999999999999999;\n          transition-duration: .4s;\n          overflow: hidden;\n        }\n        section[alert] > .wrap {\n          user-select: none;\n          position: relative;\n          width: 100%;\n          height: 100%;\n          display: flex;\n          justify-content: space-between;\n          padding: ${isMobile ? '6px' : '10px'};\n        }\n        section[alert] > .wrap > .icon {\n          user-select: none;\n          width: 50px;\n          min-width: ${isMobile ? '38px' : '50px'};\n          font-size: ${isMobile ? '26px' : '34px'};\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n        section[alert] > .wrap > .context {\n          user-select: none;\n          padding: 0 ${isMobile ? '3px' : '10px'};\n          width: calc(100% - ${isMobile ? '50px' : '64px'});\n        }\n        section[alert] > .wrap > .context > .title {\n          user-select: none;\n          font-weight: 500;\n          letter-spacing: .5px;\n          height: ${isMobile ? '48%' : '50%'};\n          margin: 0;\n          font-size: ${isMobile ? '12px' : '16px'};\n        }\n        section[alert] > .wrap > .context > .text {\n          user-select: none;\n          font-size: 13px;\n          height: 50%;\n          display: flex;\n          align-items: center;\n          padding-bottom: 3px;\n          text-overflow: ellipsis;\n          overflow: hidden;\n          white-space: nowrap;\n          margin: 0;\n        }\n        section[alert] .progress {\n          user-select: none;\n          position: absolute;\n          bottom: 0;\n          left: 0;\n          width: 100%;\n          height: 4px;\n          margin: 0;\n          background-color: #eeeeee50;\n        }\n        section[alert] .progress > div {\n          user-select: none;\n          width: 0%;\n          height: 100%;\n          transition: 2.5s;\n        }\n        section[alert] .xBtn {\n          user-select: none;\n          width: 14px;\n          height: 14px;\n          background: transparent !important;\n          border: none;\n          display: ${isMobile ? 'none' : 'flex'};\n          align-items: center;\n          justify-content: center;\n          font-size: 16px;\n          opacity: .6 !important;\n        }\n        section[alert] .xBtn:hover {\n          user-select: none;\n          box-shadow: none;\n          opacity: 1 !important;\n          background: transparent !important;\n        }\n      </style>\n    `;\n  },\n\n  init(skin = this.skin.info, title = this.title, text = this.text, isMobile) {\n    let count = document.querySelectorAll('section[alert]').length;\n    let dom = document.createElement('section');\n    dom.setAttribute('alert', '');\n    dom.style.backgroundColor = skin.bg;\n    dom.style.color = skin.txt;\n    dom.style.top = '-100px';\n    dom.innerHTML = `\n      <div class=\"wrap\">\n        <div class=\"icon\"><i class=\"${skin.icon}\"></i></div>\n        <div class=\"context\"><p class=\"title\">${title}</p><p class=\"text\">${text}</p></div>\n        <button class=\"xBtn\"><i class=\"fas fa-times\"></i></button>\n        <article class=\"progress\"><div style=\"\n          background-color: ${skin.progress}\n        \"></div>\n      </div>${this.style(isMobile)}\n    `;\n    document.body.appendChild(dom);\n    let xBtn = dom.children[0].children[2];\n    let progress = dom.children[0].children[3].children[0];\n\n    if (isMobile) {\n      dom.onclick = () => this.close(dom);\n    } else {\n      xBtn.onclick = () => this.close(dom);\n    }\n\n    window.setTimeout(() => {\n      dom.style.top = 60 * count + 10 + 'px';\n      progress.style.width = '100%';\n    }, 0);\n    this.autoClose(dom);\n  },\n\n  info(title, text, isMobile = false) {\n    this.init(this.skin.info, title, text, isMobile);\n  },\n\n  success(title, text, isMobile = false) {\n    this.init(this.skin.success, title, text, isMobile);\n  },\n\n  warn(title, text, isMobile = false) {\n    this.init(this.skin.warn, title, text, isMobile);\n  },\n\n  error(title, text, isMobile = false) {\n    this.init(this.skin.error, title, text, isMobile);\n  },\n\n  other(title, text, isMobile = false) {\n    this.init(this.skin.other, title, text, isMobile);\n  },\n\n  close(el) {\n    el.style.top = '-100px';\n    el.style.transitionDelay = '0s';\n    window.setTimeout(() => el.remove(), 330); // 3300\n  },\n\n  autoClose(el) {\n    window.setTimeout(() => {\n      el.style.transitionDelay = '3s';\n      el.style.top = '-100px';\n      el.style.transitionDelay = '0s';\n    }, 3300);\n    window.setTimeout(() => el.remove(), 3630);\n  }\n\n}; // 세션 스토리지 (GET, POST, PUT)\n\nconst useSession = (key = null, value) => {\n  if (!key || typeof key != 'string') return console.warn('useSession key is Null!!');\n  if (value == undefined) return window.sessionStorage[key];\n  window.sessionStorage.setItem(key, value);\n  return window.sessionStorage[key];\n}; // 세션 스토리지 (DELETE)\n\nconst useRemoveSession = key => {\n  if (!key || typeof key != 'string') return console.warn('delSession key is Null!!');\n  window.sessionStorage.removeItem(key);\n  return window.sessionStorage;\n}; // 로컬 스토리지 (GET, POST, PUT)\n\nconst useLocal = (key = null, value) => {\n  if (!key || typeof key != 'string') return console.warn('useSession key is Null!!');\n  if (value == undefined) return window.localStorage[key];\n  window.localStorage.setItem(key, value);\n  return window.localStorage[key];\n}; // 로컬 스토리지 (DELETE)\n\nconst useRemoveLocal = key => {\n  if (!key || typeof key != 'string') return console.warn('delSession key is Null!!');\n  window.localStorage.removeItem(key);\n  return window.localStorage;\n}; // 파일 다운로드\n\nconst useDownload = (url = '/', name = null) => {\n  const a = document.createElement('a');\n  let fileName = name;\n\n  if (!name) {\n    let date = new Date();\n    let Y = date.getFullYear();\n    let M = date.getMonth() < 10 ? '0' + date.getMonth() : date.getMonth();\n    let D = date.getDate() < 10 ? '0' + date.getDate() : date.getDate();\n    let h = date.getHours() < 10 ? '0' + date.getHours() : date.getHours();\n    let m = date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes();\n    let s = date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds();\n    fileName = Y + M + D + h + m + s;\n  }\n\n  a.setAttribute('href', url);\n  a.setAttribute('download', fileName);\n  a.setAttribute('target', 'new');\n  a.setAttribute('type', 'application/octet-stream');\n  a.click();\n  a.remove();\n  return url;\n}; // 딜레이 함수\n\nconst useDelay = duration => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve(true), duration);\n  });\n}; // FormData 리턴함수\n\nconst useForm = (data = {}, files = {}) => {\n  if (typeof data != 'object') return console.warn('data is not object!!');\n  let keys = Object.keys(data);\n  let form = new FormData();\n  keys.forEach(key => {\n    let value = Array.isArray(data[key]) ? JSON.stringify(data[key]) : data[key];\n    form.append(key, value);\n  });\n  let key = Object.keys(files)[0];\n  if (!key) return form;\n  if (files[key].length == 0) return form;\n  files[key].forEach(file => form.append(key, file));\n  return form;\n};\n\n//# sourceURL=webpack://bu/./plugins/hook.js?");

/***/ })

}]);